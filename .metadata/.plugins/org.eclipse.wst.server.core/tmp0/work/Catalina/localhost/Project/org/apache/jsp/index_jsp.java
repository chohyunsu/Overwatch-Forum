/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-12-16 05:48:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import user.UserDAO;
import post.postDAO;
import post.postDTO;
import java.util.ArrayList;
import java.net.URLEncoder;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("post.postDAO");
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("post.postDTO");
    _jspx_imports_classes.add("user.UserDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<!-- viewport는 웹페이지의 크기를 결정 , device-width는 모니터가 스마트폰의 실제 액정크기를 따라가게함. \r\n");
      out.write("  init-scale은 보여지는 화면의 zoom up정도를 1배율로! 이 값을 키우면 보여지는화면이 줌되어 크게보임. \r\n");
      out.write("  shrink-to 는 사파리브라우저만 영향을 미치는데 viewport의 크기보다 보여줘야할 내용이 크면 , 보여줘야할 내용을 줄여서라도 보여주는데 그것을 방지하기위해 씀 -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"> <!-- 부트스트랩3.0부터는 모바일 친화적이므로 이 코드를 써줌. -->\r\n");
      out.write("<!-- 부트스트랩 CSS 추가하기 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/bootstrap.min.css\">\r\n");
      out.write("<!-- 커스텀 CSS 추가하기 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/custom.css\">\r\n");
      out.write("<title>Overwatch Forums</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t#brand-image\r\n");
      out.write("\t{\r\n");
      out.write("\t\theight:50px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tbody\r\n");
      out.write("\t{\r\n");
      out.write("\t\tbackground-color: black;\r\n");
      out.write("\t} \r\n");
      out.write("\t.modal-content\r\n");
      out.write("\t{\r\n");
      out.write("\t\tbackground-image: url(img/mainbackgroundmodal.png);\r\n");
      out.write("\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t-webkit-background-size: cover;                 /* webkit부터 3줄은 웹페이지를 줄엿을때도 이미지를 설정한값으로 유지하게하려고 넣어줌. */\r\n");
      out.write("    \t-moz-background-size: cover;\r\n");
      out.write("    \t-o-background-size: cover;\r\n");
      out.write("    \tbackground-size: cover;\r\n");
      out.write("\t}\r\n");
      out.write("\t .navbar\r\n");
      out.write("\t{\r\n");
      out.write("\t\tbackground-image: url(img/mainbackground.png);\r\n");
      out.write("\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t-webkit-background-size: cover;\r\n");
      out.write("    \t-moz-background-size: cover;\r\n");
      out.write("    \t-o-background-size: cover;\r\n");
      out.write("\t\t/* background-size: cover; */\r\n");
      out.write("\t  /*   background-position:center center;  \t */\r\n");
      out.write("\t}  \r\n");
      out.write("\t \r\n");
      out.write("\ta, a:hover {\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t\ttext-decoration: none;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\ttable, thead\r\n");
      out.write("\t{\r\n");
      out.write("\t\tbackground-image: url(img/overwatch_bg.jpg);\r\n");
      out.write("\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\tbackground-size: cover;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\ttbody\r\n");
      out.write("\t{\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"width:100%; height:100%;\">\r\n");

	request.setCharacterEncoding("UTF-8");
	String mainRole = "전체";
	String searchType = "최신순";
	String search = "";
	if(request.getParameter("mainRole") != null) {
		mainRole = request.getParameter("mainRole");
	}
	if(request.getParameter("searchType") != null) {
		searchType = request.getParameter("searchType");
	}
	if(request.getParameter("search") != null) {
		search = request.getParameter("search");
	}
	
	String userID = null;
	if(session.getAttribute("userID") != null) {            //로그인이 된 상태라면
		userID = (String) session.getAttribute("userID");
	}
	/* if(userID == null) {                          // 로그인을 안했다면 index.jsp에 바로 접근할 수없고, 로그인 페이지로 보냄
		PrintWriter script = response.getWriter();
		script.println("<script>");
		script.println("alert('로그인을 해주세요.');");
		script.println("location.href='userLogin.jsp'");
		script.println("</script>");
		script.close();
	} */
	
	int pageNumber = 1;           // 처음에 page번호는 1로 초기화시켜줌.
	if (request.getParameter("pageNumber") != null) {
		pageNumber = Integer.parseInt(request.getParameter("pageNumber"));
	}
	
	/* boolean emailChecked = new UserDAO().getUserEmailChecked(userID);          // 사용자가 이메일 인증이 되었는지 확인하려고 만듬.
	if(emailChecked == false) {                // 이메일 인증이 안된 사용자면 글 게시를 할수 없으므로
		PrintWriter script = response.getWriter();
		script.println("<script>");
		script.println("location.href='emailSendConfirm.jsp'");     // emailSendConfrim은 사용자에게 이메일 인증을 받으시겠습니까라고 물어봐주는 jsp파일임.
		script.println("</script>");
		script.close();
		return;
	} */

      out.write("\r\n");
      out.write("\t<header>\r\n");
      out.write("\t<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\">        <!-- bg는 background의 약자임. -->\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"index.jsp\">       <!-- 로고 -->\r\n");
      out.write("      \t오버워치 토론장\r\n");
      out.write("      \t<img id=\"brand-image\" src=\"img/blizarrd3.jpg\" alt=\"Website Logo\" > \r\n");
      out.write("      </a>\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\">\r\n");
      out.write("\r\n");
      out.write("        <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("\r\n");
      out.write("      </button>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"collapse navbar-collapse\" id=\"navbar\">\r\n");
      out.write("\r\n");
      out.write("        <ul class=\"navbar-nav mr-auto\">                  <!-- 리스트를 구현 -->\r\n");
      out.write("\r\n");
      out.write("          <li class=\"nav-item active\">\r\n");
      out.write("\r\n");
      out.write("            <a class=\"nav-link\" href=\"index.jsp\">메인</a>\r\n");
      out.write("\r\n");
      out.write("          </li>\r\n");
      out.write("\r\n");
      out.write("          <li class=\"nav-item dropdown\">\r\n");
      out.write("\r\n");
      out.write("            <a class=\"nav-link dropdown-toggle\" id=\"dropdown\" data-toggle=\"dropdown\">\r\n");
      out.write("\r\n");
      out.write("              회원 관리\r\n");
      out.write("\r\n");
      out.write("            </a>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"dropdown-menu\" aria-labelledby=\"dropdown\">\r\n");
      out.write("            ");

            	if(userID == null) {                         // 로그인이 안된 상태라면
            
      out.write("\r\n");
      out.write("\r\n");
      out.write("              <a class=\"dropdown-item\" href=\"userLogin.jsp\">로그인</a>\r\n");
      out.write("\r\n");
      out.write("              <a class=\"dropdown-item\" href=\"userRegister.jsp\">회원가입</a>\r\n");
      out.write("              \r\n");
      out.write("            ");

            	} else {
            
      out.write("\r\n");
      out.write("\r\n");
      out.write("              <a class=\"dropdown-item\" href=\"userLogout.jsp\">로그아웃</a>\r\n");
      out.write("            ");

            	}
            
      out.write("\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("          </li>\r\n");
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("\r\n");
      out.write("        <form action=\"./index.jsp\" method=\"get\" class=\"form-inline my-2 my-lg-0\">\r\n");
      out.write("\r\n");
      out.write("          <input type=\"text\" name=\"search\" class=\"form-control mr-sm-2\" placeholder=\"내용을 입력하세요.\">\r\n");
      out.write("\r\n");
      out.write("          <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">검색</button>\r\n");
      out.write("\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("    </header>\r\n");
      out.write("  \r\n");
      out.write("  \t\r\n");
      out.write("    <div class=\"container-fluid mt-5 pt-3\" style=\"background: url(img/mainbackground.png) no-repeat center center;\r\n");
      out.write("                      background-size: cover; height: 1000px; \">        <!-- container-fluid로 하면 전체를 쓰지만(그리드 레이아웃을 최대폭 레이아웃으로),\r\n");
      out.write("                                        container로 하면 width를 줄여서 사용가능. (고정폭 그리드 레이아웃)  -->\r\n");
      out.write("        <div class=\"container mt-3 pt-3\">\r\n");
      out.write("    \t<form method=\"get\" action=\"./index.jsp\" class=\"form-inline mt-3\">\r\n");
      out.write("    \t\t<select name=\"mainRole\" class = \"form-control mx-1 mt-2\">\r\n");
      out.write("    \t\t\t<option value=\"전체\">전체</option>\r\n");
      out.write("    \t\t\t<option value=\"딜러\" ");
 if(mainRole.equals("딜러")) out.println("selected"); 
      out.write(">딜러</option>\r\n");
      out.write("    \t\t\t<option value=\"탱커\" ");
 if(mainRole.equals("탱커")) out.println("selected"); 
      out.write(">탱커</option>\r\n");
      out.write("    \t\t\t<option value=\"힐러\" ");
 if(mainRole.equals("힐러")) out.println("selected"); 
      out.write(">힐러</option>\t\r\n");
      out.write("    \t\t</select> \r\n");
      out.write("    \t\t<select name=\"searchType\" class = \"form-control mx-1 mt-2\">\r\n");
      out.write("    \t\t\t<option value=\"최신순\">최신순</option>\r\n");
      out.write("    \t\t\t<option value=\"추천순\" ");
 if(searchType.equals("추천순")) out.println("selected"); 
      out.write(">추천순</option>\r\n");
      out.write("    \t\t</select> \r\n");
      out.write("    \t\t<input type=\"text\" name=\"search\" class=\"form-control mx-1 mt-2\" placeholder=\"내용을 입력하세요.\">\r\n");
      out.write("    \t\t<button type=\"submit\" class=\"btn btn-primary mx-1 mt-2\">검색</button>\r\n");
      out.write("    \t\t<a class=\"btn btn-primary mx-1 mt-2\" data-toggle=\"modal\" href=\"#registerModal\">새 주제</a>\r\n");
      out.write("        \t<a class=\"btn btn-danger ml-1 mt-2\" data-toggle=\"modal\" href=\"#reportModal\">신고</a>\r\n");
      out.write("    \t</form>\r\n");
      out.write("    \t");
      out.write("\r\n");
      out.write("    \t\r\n");
      out.write("    \t<div class=\"row\">\r\n");
      out.write("    \t\t<table class=\"table table-striped mt-4\" style=\"text-align: center; border: 1px solid #dddddd; color: #00FFCC\">\r\n");
      out.write("    \t\t\t<thead>\r\n");
      out.write("    \t\t\t\t<tr>\r\n");
      out.write("    \t\t\t\t\t<th style=\"text-align: center;\">번호</th> \r\n");
      out.write("    \t\t\t\t\t<th style=\"text-align: center;\">제목</th>\r\n");
      out.write("    \t\t\t\t\t<th style=\"text-align: center;\">닉네임</th>\r\n");
      out.write("    \t\t\t\t\t<th style=\"text-align: center;\">주역활</th>\r\n");
      out.write("    \t\t\t\t\t<th style=\"text-align: center;\">작성일</th>\r\n");
      out.write("    \t\t\t\t\t<th style=\"text-align: center;\">조회수</th>\r\n");
      out.write("    \t\t\t\t\t<th style=\"text-align: center;\">추천수</th>\r\n");
      out.write("    \t\t\t\t</tr>\r\n");
      out.write("    \t\t\t</thead>\r\n");
      out.write("    \t\t\t<tbody>\r\n");
      out.write("    \t\t\t\t");

    					postDAO postdao = new postDAO();
    					ArrayList<postDTO> list = postdao.getList(mainRole, searchType, search, pageNumber);
    					if(list != null) {
    						for(int j = 0; j < list.size(); j++) {
    						
    				
      out.write("\r\n");
      out.write("    \t\t\t\t<tr>\r\n");
      out.write("    \t\t\t\t\t<td>");
      out.print( list.get(j).getPostID() );
      out.write("</td>\r\n");
      out.write("    \t\t\t\t\t<td><a href=\"postView.jsp?postID=");
      out.print( list.get(j).getPostID() );
      out.write('"');
      out.write('>');
      out.print( list.get(j).getPostTitle() );
      out.write("</a></td>\r\n");
      out.write("    \t\t\t\t\t<td>");
      out.print( list.get(j).getNickName() );
      out.write("</td>\r\n");
      out.write("    \t\t\t\t\t<td>");
      out.print( list.get(j).getMainRole() );
      out.write("</td>\r\n");
      out.write("    \t\t\t\t\t<td>");
      out.print( list.get(j).getPostDate().substring(0,11) + list.get(j).getPostDate().substring(11,13) 
    					        + "시" + list.get(j).getPostDate().substring(14,16) + "분");
      out.write("</td>\r\n");
      out.write("    \t\t\t\t\t<td>");
      out.print( list.get(j).getCount() );
      out.write("</td> \r\n");
      out.write("    \t\t\t\t\t<td>");
      out.print( list.get(j).getRecommendCount() );
      out.write("</td>   \r\n");
      out.write("    \t\t\t\t</tr>\r\n");
      out.write("    \t\t\t\t");

    					}
		    		}
    				
      out.write("\r\n");
      out.write("    \t\t\t</tbody>\r\n");
      out.write("    \t\t</table>\r\n");
      out.write("    \t\t ");

    			if(pageNumber != 1) {                  // 2페이지이상들은 이전페이지로 돌아가야됨.
    		
      out.write("\r\n");
      out.write("    \t\t\t");
      out.write("\r\n");
      out.write("    \t\t\t\r\n");
      out.write("    \t\t\t<a href=\"./index.jsp?pageNumber=");
      out.print( pageNumber - 1 );
      out.write("&mainRole=");
      out.print( mainRole );
      out.write("&searchType=");
      out.print( searchType );
      out.write("&search=");
      out.print( search );
      out.write("\" class = \"btn btn-success btn-arrow-left\">이전</a>\r\n");
      out.write("    \t\t");
	
    			} if(postdao.nextPage(pageNumber + 1)) {         // 다음 페이지가 존재하면
    		
      out.write("\t\r\n");
      out.write("    \t\t\t<a href=\"./index.jsp?pageNumber=");
      out.print( pageNumber + 1 );
      out.write("&mainRole=");
      out.print( mainRole );
      out.write("&searchType=");
      out.print( searchType );
      out.write("&search=");
      out.print( search );
      out.write("\" class = \"btn btn-success btn-arrow-left\">다음</a> \r\n");
      out.write("    \t\t");

    			}
    		
      out.write(" \r\n");
      out.write("    \t</div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \t\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"modal fade\" id=\"registerModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal\" aria-hidden=\"true\">\r\n");
      out.write("\r\n");
      out.write("      <div class=\"modal-dialog\">\r\n");
      out.write("\r\n");
      out.write("        <div class=\"modal-content text-success\">\r\n");
      out.write("\r\n");
      out.write("          <div class=\"modal-header\">\r\n");
      out.write("\r\n");
      out.write("            <h5 class=\"modal-title\" id=\"modal\"> 새 주제 만들기 </h5>\r\n");
      out.write("\r\n");
      out.write("            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("\r\n");
      out.write("              <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\r\n");
      out.write("            </button>\r\n");
      out.write("\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <div class=\"modal-body\">\r\n");
      out.write("\r\n");
      out.write("            <form action=\"./postAction.jsp\" method=\"post\">\r\n");
      out.write("\r\n");
      out.write("              <div class=\"form-row\">\r\n");
      out.write("\r\n");
      out.write("                <div class=\"form-group col-sm-8\">\r\n");
      out.write("\r\n");
      out.write("                  <label>닉네임</label>\r\n");
      out.write("\r\n");
      out.write("                  <input type=\"text\" name=\"nickName\" class=\"form-control\" maxlength=\"20\" placeholder=\"닉네임\">\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t <div class=\"form-group col-sm-4\">\r\n");
      out.write("\r\n");
      out.write("                  <label>주 역활</label>\r\n");
      out.write("\r\n");
      out.write("                  <select name=\"mainRole\" class=\"form-control\">\r\n");
      out.write("\r\n");
      out.write("                    <option selected>딜러</option>\r\n");
      out.write("\r\n");
      out.write("                    <option>탱커</option>\r\n");
      out.write("\r\n");
      out.write("                    <option>힐러</option>\r\n");
      out.write("\r\n");
      out.write("                  </select>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("              </div>\r\n");
      out.write("              \r\n");
      out.write("              <div class=\"form-row\">\r\n");
      out.write("              \r\n");
      out.write("              <div class=\"form-group col-sm-12\">\r\n");
      out.write("\r\n");
      out.write("                  <label>제목</label>\r\n");
      out.write("\r\n");
      out.write("                  <input type=\"text\" name=\"Title\" class=\"form-control\" maxlength=\"20\" placeholder=\"글 제목\">\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("              \r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("               \r\n");
      out.write("\r\n");
      out.write("              <div class=\"form-group\">\r\n");
      out.write("\r\n");
      out.write("                <label>내용</label>\r\n");
      out.write("\r\n");
      out.write("                <textarea name=\"Content\" class=\"form-control\" placeholder=\"글 내용\" maxlength=\"2048\" style=\"height: 180px;\"></textarea>\r\n");
      out.write("\r\n");
      out.write("              </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("              <div class=\"modal-footer\">\r\n");
      out.write("\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-success\">새 주제 쓰기</button>\r\n");
      out.write("\r\n");
      out.write("              </div>\r\n");
      out.write("\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"modal fade\" id=\"reportModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal\" aria-hidden=\"true\">\r\n");
      out.write("\r\n");
      out.write("      <div class=\"modal-dialog\">\r\n");
      out.write("\r\n");
      out.write("        <div class=\"modal-content text-success\">\r\n");
      out.write("\r\n");
      out.write("          <div class=\"modal-header\">\r\n");
      out.write("\r\n");
      out.write("            <h5 class=\"modal-title\" id=\"modal\">신고하기</h5>\r\n");
      out.write("\r\n");
      out.write("            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("\r\n");
      out.write("              <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\r\n");
      out.write("            </button>\r\n");
      out.write("\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <div class=\"modal-body\">\r\n");
      out.write("\r\n");
      out.write("            <form method=\"post\" action=\"./reportAction.jsp\">\r\n");
      out.write("\r\n");
      out.write("              <div class=\"form-group\">\r\n");
      out.write("\r\n");
      out.write("                <label>신고 제목</label>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"text\" name=\"reportTitle\" class=\"form-control\" maxlength=\"20\">\r\n");
      out.write("\r\n");
      out.write("              </div>\r\n");
      out.write("\r\n");
      out.write("              <div class=\"form-group\">\r\n");
      out.write("\r\n");
      out.write("                <label>신고 내용</label>\r\n");
      out.write("\r\n");
      out.write("                <textarea name=\"reportContent\" class=\"form-control\" maxlength=\"2048\" style=\"height: 180px;\"></textarea>\r\n");
      out.write("\r\n");
      out.write("              </div>\r\n");
      out.write("\r\n");
      out.write("              <div class=\"modal-footer\">\r\n");
      out.write("\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-danger\">신고하기</button>\r\n");
      out.write("\r\n");
      out.write("              </div>\r\n");
      out.write("\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("    </div> \r\n");
      out.write("    \r\n");
      out.write("    <!-- 제이쿼리 자바스크립트 추가하기 -->\r\n");
      out.write("\r\n");
      out.write("    <script src=\"./js/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Popper 자바스크립트 추가하기 -->\r\n");
      out.write("\r\n");
      out.write("    <script src=\"./js/popper.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- 부트스트랩 자바스크립트 추가하기 -->\r\n");
      out.write("\r\n");
      out.write("    <script src=\"./js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
